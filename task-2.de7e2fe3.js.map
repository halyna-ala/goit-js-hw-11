{"version":3,"sources":["JS/task-2.js"],"names":["refs","choosedDate","document","querySelector","days","hours","minutes","seconds","start","isDateChoosed","input","value","time","Date","now","Swal","fire","icon","title","text","style","display","targetTime","convertMs","textContent","addEventListener","startCounter","setInterval","removeEventListener","cursor","ms","Math","floor","hour","minute","second"],"mappings":";;;AAuEC,aAvED,QAAA,qBAEA,MAAMA,EAAO,CACTC,YAAaC,SAASC,cAAc,kBACpCC,KAAMF,SAASC,cAAc,eAC7BE,MAAOH,SAASC,cAAc,gBAC9BG,QAASJ,SAASC,cAAc,kBAChCI,QAASL,SAASC,cAAc,kBAChCK,MAAON,SAASC,cAAc,iBAMlC,SAASM,IACCC,MAAAA,EAAQ,KAAKC,MAGfC,IAAAA,EAFgB,IAAIC,KAAKH,GACTG,KAAKC,MAErBF,GAAAA,EAAO,EAMP,YALAG,KAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,UACPC,KAAM,uCAIdnB,EAAKQ,MAAMY,MAAMC,QAAU,QACvBC,IAAAA,EAAaC,EAAUX,GAC3BZ,EAAKI,KAAKoB,YAAcF,EAAWlB,KACnCJ,EAAKK,MAAMmB,YAAcF,EAAWjB,MACpCL,EAAKM,QAAQkB,YAAcF,EAAWhB,QACtCN,EAAKO,QAAQiB,YAAcF,EAAWf,QACtCP,EAAKQ,MAAMiB,iBAAiB,QAGnBC,SAAAA,IACLC,YAAY,KAERL,EAAaC,EADbX,GAAQ,KAERZ,EAAKI,KAAKoB,YAAcF,EAAWlB,KACnCJ,EAAKK,MAAMmB,YAAcF,EAAWjB,MACpCL,EAAKM,QAAQkB,YAAcF,EAAWhB,QACtCN,EAAKO,QAAQiB,YAAcF,EAAWf,SAIvC,KACHP,EAAKQ,MAAMoB,oBAAoB,QAASF,GACxC1B,EAAKQ,MAAMY,MAAMS,OAAS,gBAE9B7B,EAAKC,YAAYmB,MAAMC,QAAU,OAGrC,SAASE,EAAUO,GAgBV,MAAA,CAAE1B,KARI2B,KAAKC,MAAMF,EAHZG,OAWG5B,MAND0B,KAAKC,MAAOF,EALdG,MADCC,MAYS5B,QAJNyB,KAAKC,MAAQF,EAPjBG,MADCC,KADEC,KAagB5B,QAFfwB,KAAKC,MAASF,EATlBG,MADCC,KADEC,IADA,MA7CjBnC,EAAKC,YAAYwB,iBAAiB,SAAUhB,GAC5CT,EAAKQ,MAAMY,MAAMC,QAAU","file":"task-2.de7e2fe3.js","sourceRoot":"../src","sourcesContent":["import '../sass/main.scss';\n\nconst refs = {\n    choosedDate: document.querySelector('#date-selector'),\n    days: document.querySelector('[data-days]'),\n    hours: document.querySelector('[data-hours]'),\n    minutes: document.querySelector('[data-minutes]'),\n    seconds: document.querySelector('[data-seconds]'),\n    start: document.querySelector('[data-start]')\n}\n\nrefs.choosedDate.addEventListener('change', isDateChoosed)\nrefs.start.style.display = 'none';\n\nfunction isDateChoosed() {\n    const input = this.value;\n    const dateEntered = new Date(input);\n    const currentDate = Date.now();\n    let time = dateEntered - currentDate;\n    if (time < 0) {\n        Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Please choose a date in the future',\n        })\n        return\n    }\n    refs.start.style.display = 'block';\n    let targetTime = convertMs(time);\n    refs.days.textContent = targetTime.days;\n    refs.hours.textContent = targetTime.hours;\n    refs.minutes.textContent = targetTime.minutes;\n    refs.seconds.textContent = targetTime.seconds;\n    refs.start.addEventListener('click', startCounter)\n\n\n    function startCounter() {\n        setInterval(() => {\n            time -= 1000;\n            targetTime = convertMs(time);\n            refs.days.textContent = targetTime.days;\n            refs.hours.textContent = targetTime.hours;\n            refs.minutes.textContent = targetTime.minutes;\n            refs.seconds.textContent = targetTime.seconds;\n            if (time === 0) {\n                return\n            }\n        }, 1000);\n        refs.start.removeEventListener('click', startCounter)\n        refs.start.style.cursor = 'not-allowed';\n    }\n    refs.choosedDate.style.display = 'none';\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"]}